),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
tbl7 <- as_flex_table(tbl8childhivsame)
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry) %>%
filter(age < 5) %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
tbl7 <- as_flex_table(tbl8childhivsame)
### by age groups and gender dirstibution
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry) %>%
filter(age < 5) %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
tbl8childhivsame <- as_flex_table(tbl8childhivsame)
tbl8childhivsame
### by age groups and gender dirstibution
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry) %>%
filter(age < 5) %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
tbl8childhivsame <- as_flex_table(tbl8childhivsame)
tbl8childhivsame
### by age groups and gender dirstibution
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
#mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry) %>%
filter(age < 5) %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
tbl8childhivsame <- as_flex_table(tbl8childhivsame)
tbl8childhivsame
### by age groups and gender dirstibution
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
#mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry) %>%
filter(age < 5) %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
tbl8childhivsame <- as_flex_table(tbl8childhivsame)
tbl8childhivsame
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
#mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry) %>%
filter(age < 5, ry > 2020) %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
tbl8childhivsame <- as_flex_table(tbl8childhivsame)
tbl8childhivsame
db[db$age < 5,]
db[db$age < 5, ry >= 2020]
db[db$age < 5, "ry" >= 2020]
db[db$age < 5, db$ry >= 2020]
db[c(db$age < 5, db$ry >= 2020), ]
db[c(db$age < 5 & db$ry >= 2020), ]
db <- patient %>% filter(!is.na(regnum)) %>%
left_join(codes, by = c("transferid" = "codeid")) %>%
left_join(regions, by = c("regionid" = "regionid")) %>%
mutate(ry = year(regdate), regm = month(regdate),
sex = recode_factor(genderid, '4' = "M", '5' = "F"),
age = ry - year(birthdate),
dy  = year(deathfixdate),
dregm  = month(deathfixdate),
dead = ifelse(!is.na(deathfixdate),"D", "A"),
trrt = name.x,
regionname = name.y,
agrgsex = case_when(age < 15 ~ "<15",
age >= 15 & sex == "M" ~ "Male15+",
age >= 15 & sex == "F" ~ "Female15+")) %>%
select(regnum, sex, age, birthdate, dead, trrt, regionname, ry, regm, dy, dregm, agrgsex)
db[c(db$age < 5 & db$ry >= 2020), ]
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
#mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry) %>%
filter(age < 5, ry > 2020) %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
tbl8childhivsame <- as_flex_table(tbl8childhivsame)
tbl8childhivsame
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
#mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry) %>%
filter(age < 5, ry >= 2020) %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
tbl8childhivsame <- as_flex_table(tbl8childhivsame)
tbl8childhivsame
db <- patient %>% filter(!is.na(regnum)) %>%
left_join(codes, by = c("transferid" = "codeid")) %>%
left_join(regions, by = c("regionid" = "regionid")) %>%
mutate(ry = year(regdate), regm = month(regdate),
sex = recode_factor(genderid, '4' = "M", '5' = "F"),
age = ry - year(birthdate),
dy  = year(deathfixdate),
dregm  = month(deathfixdate),
dead = ifelse(!is.na(deathfixdate),"D", "A"),
trrt = name.x,
regionname = name.y,
agrgsex = case_when(age < 15 ~ "<15",
age >= 15 & sex == "M" ~ "Male15+",
age >= 15 & sex == "F" ~ "Female15+")) %>%
select(regnum, sex, age, regdate, birthdate, dead, trrt, regionname, ry, regm, dy, dregm, agrgsex)
db[c(db$age < 5 & db$ry >= 2020), ]
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
#mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry) %>%
filter(age < 5, birthdate > 2020) %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
#mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry) %>%
filter(age < 5, birthdate > '2020-01-01') %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
db <- patient %>% filter(!is.na(regnum)) %>%
left_join(codes, by = c("transferid" = "codeid")) %>%
left_join(regions, by = c("regionid" = "regionid")) %>%
mutate(ry = year(regdate), regm = month(regdate),
sex = recode_factor(genderid, '4' = "M", '5' = "F"),
age = ry - year(birthdate),
dy  = year(deathfixdate),
by  = year(birthdate),
dregm  = month(deathfixdate),
dead = ifelse(!is.na(deathfixdate),"D", "A"),
trrt = name.x,
regionname = name.y,
agrgsex = case_when(age < 15 ~ "<15",
age >= 15 & sex == "M" ~ "Male15+",
age >= 15 & sex == "F" ~ "Female15+")) %>%
select(regnum, sex, age, by, regdate, birthdate, dead, trrt, regionname, ry, regm, dy, dregm, agrgsex)
select(regnum, sex, age, by, regdate, birthdate, dead, trrt, regionname, ry, regm, dy, dregm, agrgsex)
select(regnum, sex, age, by, regdate, birthdate, dead, trrt, regionname, ry, regm, dy, dregm, agrgsex)
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
#mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry) %>%
filter(age < 5, by > 2020) %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
View(db)
db <- patient %>% filter(!is.na(regnum)) %>%
left_join(codes, by = c("transferid" = "codeid")) %>%
left_join(regions, by = c("regionid" = "regionid")) %>%
mutate(ry = year(regdate), regm = month(regdate),
sex = recode_factor(genderid, '4' = "M", '5' = "F"),
age = ry - year(birthdate),
dy  = year(deathfixdate),
by  = year(dmy(birthdate)),
dregm  = month(deathfixdate),
dead = ifelse(!is.na(deathfixdate),"D", "A"),
trrt = name.x,
regionname = name.y,
agrgsex = case_when(age < 15 ~ "<15",
age >= 15 & sex == "M" ~ "Male15+",
age >= 15 & sex == "F" ~ "Female15+")) %>%
select(regnum, sex, age, by, regdate, birthdate, dead, trrt, regionname, ry, regm, dy, dregm, agrgsex)
db <- patient %>% filter(!is.na(regnum)) %>%
left_join(codes, by = c("transferid" = "codeid")) %>%
left_join(regions, by = c("regionid" = "regionid")) %>%
mutate(ry = year(regdate), regm = month(regdate),
sex = recode_factor(genderid, '4' = "M", '5' = "F"),
age = ry - year(birthdate),
dy  = year(deathfixdate),
by  = year(parse_date(birthdate)),
dregm  = month(deathfixdate),
dead = ifelse(!is.na(deathfixdate),"D", "A"),
trrt = name.x,
regionname = name.y,
agrgsex = case_when(age < 15 ~ "<15",
age >= 15 & sex == "M" ~ "Male15+",
age >= 15 & sex == "F" ~ "Female15+")) %>%
select(regnum, sex, age, by, regdate, birthdate, dead, trrt, regionname, ry, regm, dy, dregm, agrgsex)
db <- patient %>% filter(!is.na(regnum)) %>%
left_join(codes, by = c("transferid" = "codeid")) %>%
left_join(regions, by = c("regionid" = "regionid")) %>%
mutate(ry = year(regdate), regm = month(regdate),
sex = recode_factor(genderid, '4' = "M", '5' = "F"),
age = ry - year(birthdate),
dy  = year(deathfixdate),
by  = year(date_parse(birthdate)),
dregm  = month(deathfixdate),
dead = ifelse(!is.na(deathfixdate),"D", "A"),
trrt = name.x,
regionname = name.y,
agrgsex = case_when(age < 15 ~ "<15",
age >= 15 & sex == "M" ~ "Male15+",
age >= 15 & sex == "F" ~ "Female15+")) %>%
select(regnum, sex, age, by, regdate, birthdate, dead, trrt, regionname, ry, regm, dy, dregm, agrgsex)
db <- patient %>% filter(!is.na(regnum)) %>%
left_join(codes, by = c("transferid" = "codeid")) %>%
left_join(regions, by = c("regionid" = "regionid")) %>%
mutate(ry = year(regdate), regm = month(regdate),
sex = recode_factor(genderid, '4' = "M", '5' = "F"),
age = ry - year(birthdate),
dy  = year(deathfixdate),
by  = year(parse_date_time(birthdate)),
dregm  = month(deathfixdate),
dead = ifelse(!is.na(deathfixdate),"D", "A"),
trrt = name.x,
regionname = name.y,
agrgsex = case_when(age < 15 ~ "<15",
age >= 15 & sex == "M" ~ "Male15+",
age >= 15 & sex == "F" ~ "Female15+")) %>%
select(regnum, sex, age, by, regdate, birthdate, dead, trrt, regionname, ry, regm, dy, dregm, agrgsex)
db <- patient %>% filter(!is.na(regnum)) %>%
left_join(codes, by = c("transferid" = "codeid")) %>%
left_join(regions, by = c("regionid" = "regionid")) %>%
mutate(ry = year(regdate), regm = month(regdate),
sex = recode_factor(genderid, '4' = "M", '5' = "F"),
age = ry - year(birthdate),
dy  = year(deathfixdate),
by  = year(as.Date(birthdate)),
dregm  = month(deathfixdate),
dead = ifelse(!is.na(deathfixdate),"D", "A"),
trrt = name.x,
regionname = name.y,
agrgsex = case_when(age < 15 ~ "<15",
age >= 15 & sex == "M" ~ "Male15+",
age >= 15 & sex == "F" ~ "Female15+")) %>%
select(regnum, sex, age, by, regdate, birthdate, dead, trrt, regionname, ry, regm, dy, dregm, agrgsex)
db <- patient %>% filter(!is.na(regnum)) %>%
left_join(codes, by = c("transferid" = "codeid")) %>%
left_join(regions, by = c("regionid" = "regionid")) %>%
mutate(ry = year(regdate), regm = month(regdate),
sex = recode_factor(genderid, '4' = "M", '5' = "F"),
age = ry - year(birthdate),
dy  = year(deathfixdate),
by  = year(as.Date(birthdate)),
dregm  = month(deathfixdate),
dead = ifelse(!is.na(deathfixdate),"D", "A"),
trrt = name.x,
regionname = name.y,
agrgsex = case_when(age < 15 ~ "<15",
age >= 15 & sex == "M" ~ "Male15+",
age >= 15 & sex == "F" ~ "Female15+")) %>%
select(regnum, sex, age, by, regdate, birthdate, dead, trrt, regionname, ry, regm, dy, dregm, agrgsex)
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
#mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry) %>%
filter(age < 5, by > 2020) %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
db
db <- patient %>% filter(!is.na(regnum)) %>%
left_join(codes, by = c("transferid" = "codeid")) %>%
left_join(regions, by = c("regionid" = "regionid")) %>%
mutate(ry = year(regdate), regm = month(regdate),
sex = recode_factor(genderid, '4' = "M", '5' = "F"),
age = ry - year(birthdate),
dy  = year(deathfixdate),
by  = year(as.Date(birthdate)),
dregm  = month(deathfixdate),
dead = ifelse(!is.na(deathfixdate),"D", "A"),
trrt = name.x,
regionname = name.y,
agrgsex = case_when(age < 15 ~ "<15",
age >= 15 & sex == "M" ~ "Male15+",
age >= 15 & sex == "F" ~ "Female15+")) %>%
select(regnum, sex, age, by, regdate, birthdate, dead, trrt, regionname, ry, regm, dy, dregm, agrgsex)
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
#mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry) %>%
filter(age < 5, birthdate > '2020-01-01') %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
db <- patient %>% filter(!is.na(regnum)) %>%
left_join(codes, by = c("transferid" = "codeid")) %>%
left_join(regions, by = c("regionid" = "regionid")) %>%
mutate(ry = year(regdate), regm = month(regdate),
sex = recode_factor(genderid, '4' = "M", '5' = "F"),
age = ry - year(birthdate),
dy  = year(deathfixdate),
by  = year(as.Date(birthdate)),
dregm  = month(deathfixdate),
dead = ifelse(!is.na(deathfixdate),"D", "A"),
trrt = name.x,
regionname = name.y,
agrgsex = case_when(age < 15 ~ "<15",
age >= 15 & sex == "M" ~ "Male15+",
age >= 15 & sex == "F" ~ "Female15+")) %>%
select(regnum, sex, age, by, regdate, birthdate, dead, trrt, regionname, ry, regm, dy, dregm, agrgsex)
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
#mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry, birthdate) %>%
filter(age < 5, birthdate > '2020-01-01') %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
tbl8childhivsame <- db %>% ### hiv d
#filter(ry > 2005) %>%
#mutate(ry = as.factor(ry)) %>%
# select(ry, agrgsex) %>%
select(age, ry, by) %>%
filter(age < 5, by > 2019) %>%
tbl_summary(by = ry,
#sort = all_categorical() ~ "frequency",
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p} %)"
),
#label = list(ry ~ "Year"),
missing_text = "Unknown") %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**By age group and gender**")
tbl8childhivsame <- as_flex_table(tbl8childhivsame)
tbl8childhivsame
renv::activate()
## cascade code
rm(list=ls())  # remove all data
library(usethis)
edit_git_config()
use_git()
install.packages("libgit2")
use_git()
library(libgit2)
use_git()
use_git()
setwd("../")
use_git()
library(usethis)
edit_git_config()
use_git()
library(usethis)
edit_git_config()
use_git()
setwd("../")
## packages
## load packages
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage
packages <- c("installr", "RPostgres", "dplyr","lubridate",
"ggplot2","tidyr", "DBI", "gtsummary", "openxlsx",
"readxl","readr", "pdftools", "janitor",
"stringr", "gtools", "emayili", "bit64")
ipak(packages)
### set wirking directory
workwd <- "~/OTO/Oficial/DB/HIVcascade"
homewd <- "/Users/oto/Documents/OTO/DB/HIVcascade"
if(isTRUE(file.info(workwd) [1,"isdir"])){
setwd(workwd);dir() # dir.create is used to creatge not existing directory
}else{
(isTRUE(file.info(homewd)[1,"isdir"]))
setwd(homewd);dir()
}
